const N = 2 // Cantidad de sillas.
range T = 0..N
range C = 1..3 // Cantidad de clientes.

PELUQUERO = PELUQUERO[0],
PELUQUERO [i:0..1] = (dormir -> PELUQUERO[0]
		   		   | despertar -> PELUQUERO[1]
				   | control[i]->PELUQUERO[i]
				   | when (i==1) seduerme->PELUQUERO[0]) \{dormir}.

SILLAS = SILLAS[N],
SILLAS[i:T] = (when (i>=1) sentarse-> SILLAS[i-1]
			| when (i<N) desocupar-> SILLAS[i+1]
			| disponible[i]->SILLAS[i]).

CLIENTE = ({figaro, mateo}.control[i:0..1]->if (i==0) then CORTAR else SENTARSE),
CORTAR = ({figaro, mateo}.despertar-> cortar-> {figaro, mateo}.seduerme-> STOP),
SENTARSE = (disponible[i:T] -> if (i==0) then STOP else ESPERAR),
ESPERAR = ({figaro, mateo}.control[i:0..1]->if (i==0) then CORTARDOS else SENTARSE),
CORTARDOS = (desocupar->{figaro, mateo}.despertar->cortar-> {figaro, mateo}.seduerme->STOP).


||PELUQUERÍA = (cl[C]::{fígaro, mateo}:PELUQUERO || cl[C] : CLIENTE || {cl[C]} :: SILLAS).


// cl.i.figaro.despertar -- cl.i.despertar; cl.j.figaro.control.i -- cl.j.control.i
